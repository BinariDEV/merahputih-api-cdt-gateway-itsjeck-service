x-logging: &default-logging
  driver: loki
  options:
    loki-url: 'http://localhost:3100/api/prom/push'
    loki-pipeline-stages: |
      - multiline:
          firstline: '^\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}'
          max_wait_time: 3s
      - regex:
          expression: '^(?P<date>\d{4}-\d{2}-\d{2}) (?P<time>\d{2}:\d{2}:\d{2}.\d{3}) (?P<message>(?s:.*))$$'

services:
  # Infrastructure
  loki:
    image: grafana/loki:3.0.0
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - custom_network

  prometheus:
    image: prom/prometheus:v2.51.2
    ports:
      - "9090:9090"
    volumes:
      - ./etc/prometheus:/workspace
    command:
      - --config.file=/workspace/prometheus.yml
      - --enable-feature=exemplar-storage
    depends_on:
      - loki
    logging: *default-logging
    networks:
      - custom_network

  tempo:
    image: grafana/tempo:2.4.1
    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    hostname: tempo
    ports:
      - "14250:14250"
      - "4317:4317"
    depends_on:
      - loki
    logging: *default-logging
    networks:
      - custom_network

  grafana:
    image: grafana/grafana:10.4.2
    ports:
      - "3000:3000"
    volumes:
      - ./etc/grafana/:/etc/grafana/provisioning/datasources
      - ./etc/dashboards.yaml:/etc/grafana/provisioning/dashboards/dashboards.yaml
      - ./etc/dashboards:/etc/grafana/dashboards
    depends_on:
      - loki
      - prometheus
    logging: *default-logging
    networks:
      - custom_network

  otel-collector:
    image: otel/opentelemetry-collector-contrib
    volumes:
      - ./etc/otelcol-contrib/config.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension

  # Applications

  mongodb:
    image: mongo
    container_name: mongodb
    ports:
      - "27017:27017"
    networks:
      - custom_network

  api-cdt-gateway-itsjeck-service:
    build: .
    #    image: agusramdan/api-cdt-gateway-itsjeck-service:dev
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://tempo:4317 # send traces to Tempo
      - OTEL_SERVICE_NAME=api-cdt-gateway-itsjeck-service # service name for Span
      - OTEL_RESOURCE_ATTRIBUTES=compose_service=api-cdt-gateway-itsjeck-service # add custom resource attribute to Span for Grafana Trace to Logs feature
      - OTEL_METRICS_EXPORTER=none # disable metrics exporter
    ports:
      - "8050:8080"
    logging: *default-logging
    depends_on:
      - loki
      - mongodb
    networks:
      - custom_network

networks:
  custom_network:
    driver: bridge
#    ipam:
#      config:
#        - subnet: 172.25.0.0/16